name: Build OpenWRT-LEAN for gpt2

on:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: config
  DIY_SH: script.sh
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Check machine configuration
      run: |
        echo "警告⚠"
        echo "分配的服务器性能有限，若选择的插件过多，务必注意CPU性能！"
        echo "云编译建议取消勾选Node.js及其相关插件！"
        echo "已知CPU型号（降序）：7763,8370C,8272CL,8171M,E5系列"
        echo "--------------------------CPU信息--------------------------"
        echo "CPU物理数量:$(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)"
        echo -e "CPU核心及版本信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo "--------------------------内存信息--------------------------"
        echo "已安装内存详细信息："
        sudo lshw -short -C memory | grep GiB
        echo -e "\n"
        echo "--------------------------硬盘信息--------------------------"
        echo -e  "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l) \n"
        echo "硬盘详情："
        df -Th
        
    - name: Free up disk space
      uses: easimon/maximize-build-space@master
      with: 
        root-reserve-mb: 10240
        swap-size-mb: 1
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'

    - name: Free up disk space complete
      run: df -hT

    - name: Checkout
      uses: actions/checkout@main
      
    - name: Initialize environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt update
        sudo -E apt -y install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        # sudo -E apt -y install $(curl -fsSL https://is.gd/depends_ubuntu_2204)
        sudo -E apt -y autoremove --purge
        sudo -E apt -y install libfuse-dev rename time gn
        sudo -E systemctl daemon-reload
        sudo -E apt clean
        sudo timedatectl set-timezone "$TZ"
        sudo chown $USER:$GROUPS $GITHUB_WORKSPACE

    - name: Clone source code
      working-directory: ./
      run: |
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        sed -i 's|https://github.com/coolsnowwolf/luci.git;openwrt-23.05|https://github.com/coolsnowwolf/luci|g' feeds.conf.default

    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Load custom config
      run: |
        if [[ -f "$CONFIG_FILE" ]]; then
            mv "$CONFIG_FILE" openwrt/.config
        else
            echo "未找到 $CONFIG_FILE，跳过移动"
        fi
        if [[ -f "$DIY_SH" ]]; then
            chmod +x "$DIY_SH"
            cd openwrt
            "$GITHUB_WORKSPACE/$DIY_SH"
        else
            echo "DIY_SH 脚本不存在，跳过执行"
        fi

    - name: 清理 OpenWrt 旧编译数据
      run: |
        echo "清理旧的编译缓存..."
        rm -rf openwrt/build_dir
        rm -rf openwrt/staging_dir
        rm -rf openwrt/tmp
        rm -rf openwrt/dl
        rm -rf openwrt/.ccache
        rm -rf openwrt/.config.old

    - name: Download package
      working-directory: ./openwrt
      run: |
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      run: |
        chmod -R 755 openwrt
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || { echo "多线程编译失败，尝试单线程编译"; make -j1 V=s; }
        echo "compile_status=success" >> $GITHUB_ENV

    - name: Package OpenWrt Firmware
      if: ${{ env.compile_status }} == 'success' && !cancelled()
      uses: unifreq/openwrt_packit@master
      env:
        OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/openwrt-amlogic-mesongx-phicomm_n1-rootfs.tar.gz
        KERNEL_VERSION_NAME: 6.6.y_6.12.y
        KERNEL_AUTO_LATEST: true
        PACKAGE_SOC: s905d
        WHOAMI: test
        KERNEL_REPO_URL: dsddr02/serv16
        SW_FLOWOFFLOAD: 1
        SFE_FLOW: 0
       
    - name: Upload OpenWrt Firmware to Release
      uses: ncipollo/release-action@main
      if: ${{ env.PACKAGED_STATUS == 'success' }} && !cancelled()
      with:
        tag: OpenWrt_N1_${{ env.PACKAGED_OUTPUTDATE }}
        artifacts: /opt/openwrt_packit/output/*
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          基于lean openwrt构建
          首次使用建议全新刷写
          * 基本信息
          IP: 192.168.2.2
          账户: root
          密码: password
          
    - name: Delete old releases
      uses: dev-drprasad/delete-older-releases@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        keep_latest: 5
        delete_tags : true
